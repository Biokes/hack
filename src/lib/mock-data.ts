import { Employee, PayrollPeriod, PaySlip } from '@/types';

export const mockEmployees: Employee[] = [
  {
    id: 'emp_001',
    employeeId: 'EMP001',
    firstName: 'John',
    lastName: 'Doe',
    email: 'john.doe@company.com',
    phone: '(555) 123-4567',
    position: 'Software Engineer',
    department: 'Engineering',
    hireDate: '2023-01-15',
    salary: 85000,
    status: 'active',
    payrollInfo: {
      bankAccount: '****1234',
      routingNumber: '123456789',
      taxId: '123-45-6789',
      payFrequency: 'biweekly',
      allowances: 2,
      deductions: [
        {
          id: 'ded_001',
          type: 'health_insurance',
          name: 'Health Insurance',
          amount: 200,
          isPercentage: false,
          isPreTax: true,
        },
        {
          id: 'ded_002',
          type: '401k',
          name: '401k Contribution',
          amount: 5,
          isPercentage: true,
          isPreTax: true,
        },
      ],
    },
    address: {
      street: '123 Main St',
      city: 'Anytown',
      state: 'CA',
      zipCode: '12345',
      country: 'USA',
    },
    emergencyContact: {
      name: 'Jane Doe',
      relationship: 'Spouse',
      phone: '(555) 987-6543',
      email: 'jane.doe@email.com',
    },
    createdAt: '2023-01-15T00:00:00Z',
    updatedAt: '2024-01-01T00:00:00Z',
  },
  {
    id: 'emp_002',
    employeeId: 'EMP002',
    firstName: 'Sarah',
    lastName: 'Johnson',
    email: 'sarah.johnson@company.com',
    phone: '(555) 234-5678',
    position: 'Product Manager',
    department: 'Product',
    hireDate: '2023-03-20',
    salary: 95000,
    status: 'active',
    payrollInfo: {
      bankAccount: '****5678',
      routingNumber: '987654321',
      taxId: '987-65-4321',
      payFrequency: 'biweekly',
      allowances: 1,
      deductions: [
        {
          id: 'ded_003',
          type: 'health_insurance',
          name: 'Health Insurance',
          amount: 200,
          isPercentage: false,
          isPreTax: true,
        },
        {
          id: 'ded_004',
          type: 'dental',
          name: 'Dental Insurance',
          amount: 50,
          isPercentage: false,
          isPreTax: true,
        },
      ],
    },
    address: {
      street: '456 Oak Ave',
      city: 'Springfield',
      state: 'NY',
      zipCode: '67890',
      country: 'USA',
    },
    emergencyContact: {
      name: 'Mike Johnson',
      relationship: 'Father',
      phone: '(555) 345-6789',
    },
    createdAt: '2023-03-20T00:00:00Z',
    updatedAt: '2024-01-01T00:00:00Z',
  },
  {
    id: 'emp_003',
    employeeId: 'EMP003',
    firstName: 'Michael',
    lastName: 'Chen',
    email: 'michael.chen@company.com',
    phone: '(555) 345-6789',
    position: 'UX Designer',
    department: 'Design',
    hireDate: '2023-06-10',
    salary: 75000,
    status: 'active',
    payrollInfo: {
      bankAccount: '****9012',
      routingNumber: '456789123',
      taxId: '456-78-9123',
      payFrequency: 'biweekly',
      allowances: 0,
      deductions: [
        {
          id: 'ded_005',
          type: 'health_insurance',
          name: 'Health Insurance',
          amount: 150,
          isPercentage: false,
          isPreTax: true,
        },
      ],
    },
    address: {
      street: '789 Pine St',
      city: 'San Francisco',
      state: 'CA',
      zipCode: '94102',
      country: 'USA',
    },
    emergencyContact: {
      name: 'Lisa Chen',
      relationship: 'Sister',
      phone: '(555) 456-7890',
      email: 'lisa.chen@email.com',
    },
    createdAt: '2023-06-10T00:00:00Z',
    updatedAt: '2024-01-01T00:00:00Z',
  },
  {
    id: 'emp_004',
    employeeId: 'EMP004',
    firstName: 'Emily',
    lastName: 'Rodriguez',
    email: 'emily.rodriguez@company.com',
    phone: '(555) 456-7890',
    position: 'Marketing Manager',
    department: 'Marketing',
    hireDate: '2023-02-01',
    salary: 70000,
    status: 'active',
    payrollInfo: {
      bankAccount: '****3456',
      routingNumber: '789123456',
      taxId: '789-12-3456',
      payFrequency: 'monthly',
      allowances: 1,
      deductions: [
        {
          id: 'ded_006',
          type: 'health_insurance',
          name: 'Health Insurance Premium',
          amount: 180,
          isPercentage: false,
          isPreTax: true,
        },
        {
          id: 'ded_007',
          type: '401k',
          name: '401k Match',
          amount: 3,
          isPercentage: true,
          isPreTax: true,
        },
      ],
    },
    address: {
      street: '321 Elm Dr',
      city: 'Austin',
      state: 'TX',
      zipCode: '73301',
      country: 'USA',
    },
    emergencyContact: {
      name: 'Carlos Rodriguez',
      relationship: 'Brother',
      phone: '(555) 567-8901',
    },
    createdAt: '2023-02-01T00:00:00Z',
    updatedAt: '2024-01-01T00:00:00Z',
  },
  {
    id: 'emp_005',
    employeeId: 'EMP005',
    firstName: 'David',
    lastName: 'Wilson',
    email: 'david.wilson@company.com',
    phone: '(555) 567-8901',
    position: 'Senior Developer',
    department: 'Engineering',
    hireDate: '2022-11-15',
    salary: 105000,
    status: 'active',
    payrollInfo: {
      bankAccount: '****7890',
      routingNumber: '321654987',
      taxId: '321-65-4987',
      payFrequency: 'biweekly',
      allowances: 3,
      deductions: [
        {
          id: 'ded_008',
          type: 'health_insurance',
          name: 'Family Health Plan',
          amount: 350,
          isPercentage: false,
          isPreTax: true,
        },
        {
          id: 'ded_009',
          type: 'dental',
          name: 'Family Dental',
          amount: 100,
          isPercentage: false,
          isPreTax: true,
        },
        {
          id: 'ded_010',
          type: '401k',
          name: '401k Contribution',
          amount: 8,
          isPercentage: true,
          isPreTax: true,
        },
      ],
    },
    address: {
      street: '654 Maple Ln',
      city: 'Seattle',
      state: 'WA',
      zipCode: '98101',
      country: 'USA',
    },
    emergencyContact: {
      name: 'Amanda Wilson',
      relationship: 'Spouse',
      phone: '(555) 678-9012',
      email: 'amanda.wilson@email.com',
    },
    createdAt: '2022-11-15T00:00:00Z',
    updatedAt: '2024-01-01T00:00:00Z',
  },
];

export const mockPayrollPeriods: PayrollPeriod[] = [
  {
    id: 'payroll_001',
    startDate: '2024-01-01',
    endDate: '2024-01-15',
    payDate: '2024-01-20',
    status: 'paid',
    totalGross: 45000,
    totalNet: 32500,
    totalDeductions: 12500,
    paySlips: [],
    createdAt: '2024-01-01T00:00:00Z',
  },
  {
    id: 'payroll_002',
    startDate: '2024-01-16',
    endDate: '2024-01-31',
    payDate: '2024-02-05',
    status: 'processed',
    totalGross: 45000,
    totalNet: 32500,
    totalDeductions: 12500,
    paySlips: [],
    createdAt: '2024-01-16T00:00:00Z',
  },
  {
    id: 'payroll_003',
    startDate: '2024-02-01',
    endDate: '2024-02-15',
    payDate: '2024-02-20',
    status: 'draft',
    totalGross: 45000,
    totalNet: 32500,
    totalDeductions: 12500,
    paySlips: [],
    createdAt: '2024-02-01T00:00:00Z',
  },
];

export const mockPaySlips: PaySlip[] = [
  {
    id: 'payslip_001',
    employeeId: 'emp_001',
    employee: mockEmployees[0],
    payPeriodId: 'payroll_001',
    grossPay: 3269.23,
    netPay: 2450.15,
    regularHours: 80,
    overtimeHours: 0,
    regularRate: 40.87,
    overtimeRate: 61.31,
    deductions: [
      {
        id: 'ded_001',
        type: 'health_insurance',
        name: 'Health Insurance',
        amount: 200,
        isPreTax: true,
      },
      {
        id: 'ded_002',
        type: '401k',
        name: '401k Contribution',
        amount: 163.46,
        isPreTax: true,
      },
    ],
    taxes: [
      {
        id: 'tax_001',
        type: 'federal',
        name: 'Federal Income Tax',
        amount: 327.69,
        rate: 0.12,
      },
      {
        id: 'tax_002',
        type: 'state',
        name: 'State Income Tax',
        amount: 98.08,
        rate: 0.03,
      },
      {
        id: 'tax_003',
        type: 'social_security',
        name: 'Social Security',
        amount: 202.69,
        rate: 0.062,
      },
      {
        id: 'tax_004',
        type: 'medicare',
        name: 'Medicare',
        amount: 47.40,
        rate: 0.0145,
      },
    ],
    payDate: '2024-01-20',
    status: 'paid',
    createdAt: '2024-01-01T00:00:00Z',
  },
];

// Utility functions for generating additional mock data
export function generateMockEmployee(overrides: Partial<Employee> = {}): Employee {
  const id = `emp_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
  
  return {
    id,
    employeeId: `EMP${Math.floor(Math.random() * 1000).toString().padStart(3, '0')}`,
    firstName: 'John',
    lastName: 'Doe',
    email: `${id}@company.com`,
    phone: '(555) 000-0000',
    position: 'Employee',
    department: 'General',
    hireDate: new Date().toISOString().split('T')[0],
    salary: 60000,
    status: 'active',
    payrollInfo: {
      bankAccount: '****0000',
      routingNumber: '000000000',
      taxId: '000-00-0000',
      payFrequency: 'biweekly',
      allowances: 0,
      deductions: [],
    },
    address: {
      street: '123 Default St',
      city: 'Default City',
      state: 'ST',
      zipCode: '00000',
      country: 'USA',
    },
    emergencyContact: {
      name: 'Emergency Contact',
      relationship: 'Other',
      phone: '(555) 000-0000',
    },
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
    ...overrides,
  };
}

export function generateMockPayrollPeriod(overrides: Partial<PayrollPeriod> = {}): PayrollPeriod {
  const id = `payroll_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
  
  return {
    id,
    startDate: new Date().toISOString().split('T')[0],
    endDate: new Date(Date.now() + 14 * 24 * 60 * 60 * 1000).toISOString().split('T')[0],
    payDate: new Date(Date.now() + 21 * 24 * 60 * 60 * 1000).toISOString().split('T')[0],
    status: 'draft',
    totalGross: 0,
    totalNet: 0,
    totalDeductions: 0,
    paySlips: [],
    createdAt: new Date().toISOString(),
    ...overrides,
  };
}
